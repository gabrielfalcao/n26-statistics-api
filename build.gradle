buildscript {
	ext {
		springBootVersion = '2.1.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.springframework:springloaded:1.2.6.RELEASE'
	}
}

plugins {
    id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"


bootJar {
    baseName = 'N26-Stats-API'
    version =  '0.0.1'
}

group = 'it.falcao.n26'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile "org.springframework.boot:spring-boot-starter-logging"
	compile "com.fasterxml.jackson.core:jackson-databind:2.9.6"
	compileOnly 'org.projectlombok:lombok'

	compile 'io.springfox:springfox-swagger2:2.7.0'
	compile 'io.springfox:springfox-swagger-ui:2.7.0'

	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.springframework:spring-test'
	testCompile 'org.hamcrest:hamcrest-all:1.3'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntime(
		'org.junit.jupiter:junit-jupiter-engine:5.1.0',
		'org.junit.vintage:junit-vintage-engine:5.1.0',
		'org.junit.platform:junit-platform-launcher:1.1.0',
		'org.junit.platform:junit-platform-runner:1.1.0'
    )
}

test {
	useJUnitPlatform()
    // Always run tests, even when nothing changed.
    //dependsOn 'build', 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
    //https://docs.gradle.org/current/userguide/jacoco_plugin.html
//    jacoco {
//        append = false
//        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
//        classDumpDir = file("$buildDir/jacoco/classpathdumps")
//    }
}

//jacocoTestReport {
//    reports {
//        xml.enabled false
//        csv.enabled false
//        html.destination file("${buildDir}/jacocoHtml")
//    }
//}

//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            limit {
//                minimum = 0.5
//            }
//        }
//
//        rule {
//            enabled = false
//            element = 'CLASS'
//            includes = ['org.gradle.*']
//
//            limit {
//                counter = 'LINE'
//                value = 'TOTALCOUNT'
//                maximum = 0.3
//            }
//        }
//    }
//}